--#include Contract

DoubleContract = Contract:new('Double Contract',
                              'Place 2 of any one opponent\'s mobsters on the Hit List.',
                              3, 'Double Contract', true,
                              {'Family Influence', 'Mob Power'})

function DoubleContract:new()
    local self = setmetatable({}, DoubleContract)
    return self
end

function DoubleContract:responseScript(playerColor, responderColor, responseCard)
    UI.hide('sickButton')
    local card = responseCard
    if card == 'Family Influence' then
        if playerList.call('getData', { responderColor }).mobCount >= 1 then
            -- Add 1 Defender Mobster to HitList
            local mob = playerList.call('removeMobCard', { responderColor })
            hitList.call('addMobster', { mob, false })
        end
        return true
    elseif card == 'Mob Power' then
        if playerList.call('getData', { playerColor }).mobCount >= 1 then
            -- Add 1 Attacker Mobster to HitList
            local aMob = playerList.call('removeMobCard', { playerColor })
            hitList.call('addMobster', { aMob, false })
        end
        if playerList.call('getData', { responderColor }).mobCount >= 1 then
            -- Add 1 Defender Mobster to HitList
            local dMob = playerList.call('removeMobCard', { responderColor })
            hitList.call('addMobster', { dMob, false })
        end
        return true
    else
        -- Add 2 Defender Mobster to HitList
        if playerList.call('getData', { responderColor }).mobCount >= 1 then
            local mob = playerList.call('removeMobCard', { responderColor })
            hitList.call('addMobster', { mob, false })
        end
        if playerList.call('getData', { responderColor }).mobCount >= 1 then
            local mob = playerList.call('removeMobCard', { responderColor })
            hitList.call('addMobster', { mob, false })
        end
        return false
    end
end
