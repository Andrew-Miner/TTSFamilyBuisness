--#include !/HitList/HitList

Card = {
    count = 0,
    type = '0',
    hasTarget = false,
    targetSelf = false,
    targetLabel = 'error',
    waitForResponse = false,
    name = 'name',
    description = 'description',
    responses = {}
}

function Card:new(name, description, type, count, hasTarget, targetSelf, targetLabel, waitForResponse, responses)
    local o = {}
    setmetatable(o, self)
    self.__index = self

    o.name = name
    o.description = description
    o.type = type
    o.count = count
    o.hasTarget = hasTarget
    o.targetLabel = targetLabel
    o.targetSelf = targetSelf
    o.waitForResponse = waitForResponse
    o.responses = responses

    return o
end

function Card:isResponse(card)
    if card ~= nil then
        return contains(self.responses, card.getName(),
            function(name1, name2)
                return name1 == name2
            end)
    end
    return false
end

function Card:useScript(gameState, playerColor)

end

function Card:isValidPickUp(gameState, playerColor, object)
    if gameState.id == DECIDING_STATE and
    (self.type == 'Red' or self.type == 'Green') then
        return true
    elseif gameState.id == DEFEND_STATE and self.type == 'Blue' then
        return true
    end
    return false
end

function Card:pickUpEvent(gameState, playerColor)

end

function Card:isValidDrop(gameState, playerColor, object)
    if gameState.id == DECIDING_STATE and
    (self.type == 'Red' or self.type == 'Green') then
        return true
    elseif gameState.id == RESPONSE_STATE then
        return self:isResponse(object)
    end
    return false
end

function Card:dropEvent(gameState, playerColor)

end

function Card:updateEvent(gameState, playerColor)

end

function Card:responseScript(gameState, playerColor)

end

function Card:getLogString(gameState, playerColor)

end
